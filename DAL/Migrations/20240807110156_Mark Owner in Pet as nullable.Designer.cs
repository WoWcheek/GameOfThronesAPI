// <auto-generated />
using System;
using DAL.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(GoTDBContext))]
    [Migration("20240807110156_Mark Owner in Pet as nullable")]
    partial class MarkOwnerinPetasnullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Houses.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CrestPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlsoKnownAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("HouseId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fc39009-6e3f-4415-89e5-1db92c9f45ee"),
                            Name = "Male"
                        },
                        new
                        {
                            Id = new Guid("b83f5072-0370-423f-90e5-c959b3f8e93c"),
                            Name = "Female"
                        },
                        new
                        {
                            Id = new Guid("21d3630a-4d0a-4d19-b41a-d4715ef7200e"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PetTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.PetType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("724ea49b-2ebf-422e-b2d0-5754b6c3bc56"),
                            Name = "Dragon"
                        },
                        new
                        {
                            Id = new Guid("819f58c8-c2bb-457f-9df8-9594f707b722"),
                            Name = "Direwolf"
                        });
                });

            modelBuilder.Entity("DAL.Models.Locations.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("ExistedFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ExistedTo")
                        .HasColumnType("date");

                    b.Property<Guid?>("LocationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationTypeId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DAL.Models.Locations.LocationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocationTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a48783bc-f035-4104-a104-9f3c94d6c777"),
                            Name = "Continent"
                        },
                        new
                        {
                            Id = new Guid("6e32994a-b21e-43db-8070-83c7be8e29e0"),
                            Name = "Region"
                        },
                        new
                        {
                            Id = new Guid("0b25bad1-8ccd-4538-92ab-8223e409633b"),
                            Name = "Estate"
                        });
                });

            modelBuilder.Entity("DAL.Models.Houses.House", b =>
                {
                    b.HasOne("DAL.Models.Locations.Location", "Location")
                        .WithOne("House")
                        .HasForeignKey("DAL.Models.Houses.House", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Character", b =>
                {
                    b.HasOne("DAL.Models.LivingCreatures.Gender", "Gender")
                        .WithMany("Characters")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Houses.House", "House")
                        .WithMany("Characters")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("House");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Pet", b =>
                {
                    b.HasOne("DAL.Models.LivingCreatures.Gender", "Gender")
                        .WithMany("Pets")
                        .HasForeignKey("GenderId");

                    b.HasOne("DAL.Models.LivingCreatures.Character", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId");

                    b.HasOne("DAL.Models.LivingCreatures.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Owner");

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("DAL.Models.Locations.Location", b =>
                {
                    b.HasOne("DAL.Models.Locations.LocationType", "LocationType")
                        .WithMany("Locations")
                        .HasForeignKey("LocationTypeId");

                    b.Navigation("LocationType");
                });

            modelBuilder.Entity("DAL.Models.Houses.House", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Character", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.Gender", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("DAL.Models.LivingCreatures.PetType", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("DAL.Models.Locations.Location", b =>
                {
                    b.Navigation("House");
                });

            modelBuilder.Entity("DAL.Models.Locations.LocationType", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
